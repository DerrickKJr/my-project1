{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useRef, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar showAlert = function showAlert() {\n  return Alert.alert(\"Test Alert\", \"This is a test alert\");\n};\nexport default function App() {\n  var translation = useRef(new Animated.Value(0)).current;\n  var _blue = 'blue',\n    _blue2 = _slicedToArray(_blue, 2),\n    bgColor = _blue2[0],\n    setbgColor = _blue2[1];\n  var animRight = function animRight() {\n    return Animated.timing(translation, {\n      toValue: 50\n    }).start();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Hello, Welcome To My React Playground\"\n    }), _jsx(Animated.View, {\n      style: {\n        width: 100,\n        height: 100,\n        backgroundColor: bgColor,\n        transform: [{\n          translateY: translation\n        }]\n      }\n    }), _jsx(Button, {\n      title: \"PRESS ME\",\n      onPress: setbgColor\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","React","useRef","useEffect","Animated","StyleSheet","Text","View","Alert","Button","jsx","_jsx","jsxs","_jsxs","showAlert","alert","App","translation","Value","current","_blue","_blue2","_slicedToArray","bgColor","setbgColor","animRight","timing","toValue","start","style","styles","container","children","width","height","backgroundColor","transform","translateY","title","onPress","create","flex","alignItems","justifyContent"],"sources":["C:/Users/derri/OneDrive/Documents/MyReactApps/my-project1/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useRef, useEffect } from 'react';\nimport { Animated, StyleSheet, Text, View, Alert, Button } from 'react-native';\n\nconst showAlert = () =>\n  Alert.alert(\"Test Alert\", \"This is a test alert\");\n\nexport default function App() {\n  const translation = useRef(new Animated.Value(0)).current;\n  const [bgColor, setbgColor] = 'blue';\n\n  const animRight = () => Animated.timing(translation, {toValue: 50}).start();\n  //const setbgColor = () => boxColor='red';\n  return (\n    <View style={styles.container}>\n      <Text>Hello, Welcome To My React Playground</Text>\n      <Animated.View style={{width: 100, height: 100, backgroundColor: bgColor, transform: [{ translateY: translation,}]}}></Animated.View>\n      <Button title='PRESS ME' onPress={setbgColor}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA;EAAA,OACbN,KAAK,CAACO,KAAK,CAAC,YAAY,EAAE,sBAAsB,CAAC;AAAA;AAEnD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAMC,WAAW,GAAGf,MAAM,CAAC,IAAIE,QAAQ,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EACzD,IAAAC,KAAA,GAA8B,MAAM;IAAAC,MAAA,GAAAC,cAAA,CAAAF,KAAA;IAA7BG,OAAO,GAAAF,MAAA;IAAEG,UAAU,GAAAH,MAAA;EAE1B,IAAMI,SAAS,GAAG,SAAZA,SAASA,CAAA;IAAA,OAASrB,QAAQ,CAACsB,MAAM,CAACT,WAAW,EAAE;MAACU,OAAO,EAAE;IAAE,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EAAA;EAE3E,OACEf,KAAA,CAACN,IAAI;IAACsB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BrB,IAAA,CAACL,IAAI;MAAA0B,QAAA,EAAC;IAAqC,CAAM,CAAC,EAClDrB,IAAA,CAACP,QAAQ,CAACG,IAAI;MAACsB,KAAK,EAAE;QAACI,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAEC,eAAe,EAAEZ,OAAO;QAAEa,SAAS,EAAE,CAAC;UAAEC,UAAU,EAAEpB;QAAY,CAAC;MAAC;IAAE,CAAgB,CAAC,EACrIN,IAAA,CAACF,MAAM;MAAC6B,KAAK,EAAC,UAAU;MAACC,OAAO,EAAEf;IAAW,CAAS,CAAC,EACvDb,IAAA,CAACX,SAAS;MAAC6B,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACtB,CAAC;AAEX;AAEA,IAAMC,MAAM,GAAGzB,UAAU,CAACmC,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPN,eAAe,EAAE,MAAM;IACvBO,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}