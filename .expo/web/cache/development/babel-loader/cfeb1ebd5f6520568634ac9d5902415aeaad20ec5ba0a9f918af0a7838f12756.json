{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useRef, useEffect, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar showAlert = function showAlert() {\n  return Alert.alert(\"Test Alert\", \"This is a test alert\");\n};\nexport default function App() {\n  var translation = useRef(new Animated.Value(0)).current;\n  var _useState = useState(colorChange),\n    _useState2 = _slicedToArray(_useState, 2),\n    bgColor = _useState2[0],\n    setbgColor = _useState2[1];\n  var animRight = function animRight() {\n    return Animated.timing(translation, {\n      toValue: 50\n    }).start();\n  };\n  function colorChange() {\n    var color = 'black';\n    var x = Math.random();\n    console.log(x);\n    if (x > .5) {\n      color = 'red';\n    } else {\n      color = 'blue';\n    }\n    return color;\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Hello, Welcome To My React Playground\"\n    }), _jsx(Animated.View, {\n      style: {\n        width: 100,\n        height: 100,\n        backgroundColor: bgColor,\n        transform: [{\n          translateY: translation\n        }]\n      }\n    }), _jsx(TouchableOpacity, {\n      style: {\n        backgroundColor: 'brown',\n        borderRadius: '20px',\n        padding: '10px',\n        marginTop: '5px'\n      },\n      onPress: function onPress() {\n        return setbgColor(colorChange());\n      },\n      children: _jsx(Text, {\n        children: \"PRESS ME\"\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","React","useRef","useEffect","useState","Animated","StyleSheet","Text","View","Alert","Button","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","showAlert","alert","App","translation","Value","current","_useState","colorChange","_useState2","_slicedToArray","bgColor","setbgColor","animRight","timing","toValue","start","color","x","Math","random","console","log","style","styles","container","children","width","height","backgroundColor","transform","translateY","borderRadius","padding","marginTop","onPress","create","flex","alignItems","justifyContent"],"sources":["C:/Users/derri/OneDrive/Documents/MyReactApps/my-project1/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Animated, StyleSheet, Text, View, Alert, Button, TouchableOpacity } from 'react-native';\n\nconst showAlert = () =>\n  Alert.alert(\"Test Alert\", \"This is a test alert\");\n\nexport default function App() {\n  const translation = useRef(new Animated.Value(0)).current;\n  const [bgColor, setbgColor] = useState(colorChange);\n  const animRight = () => Animated.timing(translation, {toValue: 50}).start();\n\n  function colorChange(){\n    var color = 'black';\n    var x = Math.random();\n    console.log(x);\n    if (x > .5) {\n      color = 'red';\n    } else {\n      color = 'blue';\n    }\n    return color;\n  }\n\n  //const setbgColor = () => boxColor='red';\n  return (\n    <View style={styles.container}>\n      <Text>Hello, Welcome To My React Playground</Text>\n      <Animated.View style={{width: 100, height: 100, backgroundColor: bgColor, transform: [{ translateY: translation,}]}}></Animated.View>\n      <TouchableOpacity style={{backgroundColor: 'brown', borderRadius: '20px', padding: '10px', marginTop: '5px'}}onPress={() => setbgColor(colorChange())}><Text>PRESS ME</Text></TouchableOpacity>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG3D,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA;EAAA,OACbP,KAAK,CAACQ,KAAK,CAAC,YAAY,EAAE,sBAAsB,CAAC;AAAA;AAEnD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAMC,WAAW,GAAGjB,MAAM,CAAC,IAAIG,QAAQ,CAACe,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EACzD,IAAAC,SAAA,GAA8BlB,QAAQ,CAACmB,WAAW,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA5CI,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAMI,SAAS,GAAG,SAAZA,SAASA,CAAA;IAAA,OAASvB,QAAQ,CAACwB,MAAM,CAACV,WAAW,EAAE;MAACW,OAAO,EAAE;IAAE,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EAAA;EAE3E,SAASR,WAAWA,CAAA,EAAE;IACpB,IAAIS,KAAK,GAAG,OAAO;IACnB,IAAIC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;IACrBC,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;IACd,IAAIA,CAAC,GAAG,EAAE,EAAE;MACVD,KAAK,GAAG,KAAK;IACf,CAAC,MAAM;MACLA,KAAK,GAAG,MAAM;IAChB;IACA,OAAOA,KAAK;EACd;EAGA,OACEjB,KAAA,CAACP,IAAI;IAAC8B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B5B,IAAA,CAACN,IAAI;MAAAkC,QAAA,EAAC;IAAqC,CAAM,CAAC,EAClD5B,IAAA,CAACR,QAAQ,CAACG,IAAI;MAAC8B,KAAK,EAAE;QAACI,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAEC,eAAe,EAAElB,OAAO;QAAEmB,SAAS,EAAE,CAAC;UAAEC,UAAU,EAAE3B;QAAY,CAAC;MAAC;IAAE,CAAgB,CAAC,EACrIN,IAAA,CAACF,gBAAgB;MAAC2B,KAAK,EAAE;QAACM,eAAe,EAAE,OAAO;QAAEG,YAAY,EAAE,MAAM;QAAEC,OAAO,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAK,CAAE;MAAAC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMvB,UAAU,CAACJ,WAAW,CAAC,CAAC,CAAC;MAAA,CAAC;MAAAkB,QAAA,EAAC5B,IAAA,CAACN,IAAI;QAAAkC,QAAA,EAAC;MAAQ,CAAM;IAAC,CAAkB,CAAC,EAC/L5B,IAAA,CAACb,SAAS;MAACsC,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACtB,CAAC;AAEX;AAEA,IAAMC,MAAM,GAAGjC,UAAU,CAAC6C,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPR,eAAe,EAAE,MAAM;IACvBS,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}